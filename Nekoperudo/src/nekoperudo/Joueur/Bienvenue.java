package nekoperudo.Joueur;

import java.net.MalformedURLException;
import java.rmi.Naming;
import java.rmi.NotBoundException;
import java.rmi.RemoteException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import nekoperudo.Interface.Nekoperudo;

public class Bienvenue extends javax.swing.JDialog {

    String pseudo;
    String serveur;

    /**
     * Constructeur
     */
    public Bienvenue() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        popupMenu1 = new java.awt.PopupMenu();
        popupMenu2 = new java.awt.PopupMenu();
        lblPseudo = new javax.swing.JLabel();
        txfPseudo = new javax.swing.JTextField();
        lblNekorudo = new javax.swing.JLabel();
        btnCreerPartie = new javax.swing.JButton();
        btnRejoindre = new javax.swing.JButton();
        btnQuitter = new javax.swing.JButton();
        btnRegles = new javax.swing.JButton();
        txfServeur = new javax.swing.JTextField();
        lblNomServeur = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        popupMenu1.setLabel("popupMenu1");

        popupMenu2.setLabel("popupMenu2");

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        lblPseudo.setFont(new java.awt.Font("Cambria", 0, 24)); // NOI18N
        lblPseudo.setText("Votre Pseudo :");

        txfPseudo.setFont(new java.awt.Font("Cambria", 0, 24)); // NOI18N
        txfPseudo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txfPseudoActionPerformed(evt);
            }
        });

        lblNekorudo.setFont(new java.awt.Font("Cambria", 0, 48)); // NOI18N
        lblNekorudo.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        lblNekorudo.setText("NEKORUDO");

        btnCreerPartie.setText("Créer une partie ( non dispo)");

        btnRejoindre.setText("Rejoindre une partie");
        btnRejoindre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRejoindreActionPerformed(evt);
            }
        });

        btnQuitter.setText("Quitter");
        btnQuitter.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnQuitterMouseClicked(evt);
            }
        });

        btnRegles.setText("Règles du jeu");
        btnRegles.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReglesActionPerformed(evt);
            }
        });

        txfServeur.setFont(new java.awt.Font("Cambria", 0, 24)); // NOI18N
        txfServeur.setText("localhost");

        lblNomServeur.setFont(new java.awt.Font("Cambria", 0, 24)); // NOI18N
        lblNomServeur.setText("Nom du serveur :");

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/cat-bienvenue.png"))); // NOI18N
        jLabel1.setFocusable(false);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(66, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(btnCreerPartie)
                        .addGap(57, 57, 57))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblNomServeur)
                            .addComponent(lblPseudo))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(txfPseudo, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblNekorudo)
                    .addComponent(txfServeur, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnRejoindre)
                    .addComponent(btnRegles))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(68, 68, 68)
                        .addComponent(btnQuitter))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel1)))
                .addGap(104, 104, 104))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(143, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(lblNekorudo)
                        .addGap(74, 74, 74)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txfPseudo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblPseudo))
                        .addGap(28, 28, 28)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txfServeur, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblNomServeur))
                        .addGap(69, 69, 69))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(59, 59, 59)))
                .addComponent(btnRejoindre)
                .addGap(51, 51, 51)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCreerPartie)
                    .addComponent(btnRegles)
                    .addComponent(btnQuitter))
                .addGap(62, 62, 62))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txfPseudoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txfPseudoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txfPseudoActionPerformed

    /*  Récupère le pseudo, se connecte au serveur central puis passe à la page fileAttente    */
    private void btnRejoindreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRejoindreActionPerformed

        Nekoperudo proxy;
        try {

            //proxy = (Nekoperudo) Naming.lookup("MJ");   //Connexion au serveur central         
            proxy = (Nekoperudo) Naming.lookup("rmi://" + getServeur() + ":1099/MJ");

            //Crée un nouveau joueur
            JoueurNotificationImpl notif = new JoueurNotificationImpl("Bob");
            proxy.enregistrerNotification("Bob", notif);
            if (txfPseudo.getText().isEmpty()) {
                throw new ChampVideException();
            }



            //Création et ouverture de la page fileAttente
            FileAttente fa = new FileAttente(this.getPseudo(), this.getServeur(), this.getRMIObject(proxy), this.getNotif(notif));
            fa.setTitle("Nekorudo : " + getPseudo());
            fa.setLocationRelativeTo(null);
            fa.setVisible(true);

            this.setVisible(false);
            notif.setFileAttente(fa);

        } catch (NotBoundException ex) {
            JOptionPane.showMessageDialog(this, "Registre incorrect.", "Erreur", JOptionPane.ERROR_MESSAGE);
        } catch (MalformedURLException ex) {
            JOptionPane.showMessageDialog(this, "Format de l'adresse incorrect.", "Erreur", JOptionPane.ERROR_MESSAGE);
        } catch (RemoteException ex) {
            JOptionPane.showMessageDialog(this, "Serveur inexistant.", "Erreur", JOptionPane.ERROR_MESSAGE);
        } catch (ChampVideException ex) {
            JOptionPane.showMessageDialog(this, "Veuillez renseigner le pseudo.", "Erreur", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnRejoindreActionPerformed

    /*  Quitte l'application    */
    private void btnQuitterMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnQuitterMouseClicked
        System.exit(0);
    }//GEN-LAST:event_btnQuitterMouseClicked

    /*  Affiche la page des règles  */
    private void btnReglesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReglesActionPerformed

        ReglesJeu rj = new ReglesJeu();
        try {
            rj.setTitle("Nekorudo : " + getPseudo());
            rj.setLocationRelativeTo(null);
            rj.setVisible(true);
        } catch (ChampVideException ex) {
            JOptionPane.showMessageDialog(this, "Veuillez renseigner le pseudo.", "Erreur", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnReglesActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        System.exit(0);
    }//GEN-LAST:event_formWindowClosing


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCreerPartie;
    private javax.swing.JButton btnQuitter;
    private javax.swing.JButton btnRegles;
    private javax.swing.JButton btnRejoindre;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel lblNekorudo;
    private javax.swing.JLabel lblNomServeur;
    private javax.swing.JLabel lblPseudo;
    private java.awt.PopupMenu popupMenu1;
    private java.awt.PopupMenu popupMenu2;
    private javax.swing.JTextField txfPseudo;
    private javax.swing.JTextField txfServeur;
    // End of variables declaration//GEN-END:variables

    /**
     * Récupère le pseudo entré
     *
     * @return String pseudo
     * @throws ChampVideException
     */
    public String getPseudo() throws ChampVideException {
        pseudo = txfPseudo.getText();
        if (txfPseudo.getText().isEmpty()) { //Si le champ est vide
            throw new ChampVideException();
        }
        return pseudo;
    }

    /**
     * Récupère le serveur entré
     *
     * @return String serveur
     */
    public String getServeur() {
        serveur = txfServeur.getText();
        return serveur;
    }

    /**
     * Retourne le proxy
     *
     * @param pProxy
     * @return Nekoperudo
     */
    public Nekoperudo getRMIObject(Nekoperudo pProxy) {
        return pProxy;
    }

    /**
     * Retourne la notif
     *
     * @param pNotif
     * @return JoueurNotificationImpl
     */
    public JoueurNotificationImpl getNotif(JoueurNotificationImpl pNotif) {
        return pNotif;
    }
}
